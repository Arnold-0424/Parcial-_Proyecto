from fastapi import FastAPI
from contextlib import asynccontextmanager
from database import create_db_and_tables
from routers import empleados, proyectos, asignaciones


# âœ… Configurar evento lifespan (inicio y cierre)
@asynccontextmanager
async def lifespan(app: FastAPI):
    print("ğŸŸ¢ Iniciando aplicaciÃ³n y creando tablas...")
    create_db_and_tables()
    yield
    print("ğŸ”´ Cerrando aplicaciÃ³n...")


# âœ… Crear aplicaciÃ³n principal
app = FastAPI(
    title="Sistema de GestiÃ³n de Proyectos",
    description="API para la administraciÃ³n de empleados y proyectos.",
    version="1.0.0",
    lifespan=lifespan
)

# âœ… Incluir routers
app.include_router(empleados.router)
app.include_router(proyectos.router)
app.include_router(asignaciones.router)


# âœ… Endpoint raÃ­z de prueba
@app.get("/")
def home():
    return {"mensaje": "ğŸš€ API de GestiÃ³n de Proyectos activa y lista para trabajar"}
